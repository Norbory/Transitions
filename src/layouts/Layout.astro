---
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body class="relative">
		<div class="reading bg-red-600 h-2"></div>
		<slot />
	</body>
</html>
<script>
	// Nuevos metodos para animaciones
	// const $reading = document.querySelector('.reading') as HTMLElement;
	// $reading.style.transformOrigin = '0% 50%'
	// $reading.animate(
	// 	{
	// 		transform: ['scaleX(0)','scaleX(1)'],
	// 	},
	// 	{
	// 		fill: 'forwards',
	// 		timeline: new ScrollTimeline({
	// 			source: document.documentElement,
	// 		}),
	// 	}
	// );
	window.addEventListener('scroll', () => {
		const docHeight = document.documentElement.scrollHeight - document.documentElement.clientHeight;
		const scrolled = (window.scrollY / docHeight) * 100;
		const readingElement = document.querySelector('.reading');
		if (readingElement) {
			(readingElement as HTMLElement).style.width = scrolled + '%';
		}
	});
</script>
<style is:global>
	:root {
		--accent: 136, 58, 234;
		--accent-light: 224, 204, 250;
		--accent-dark: 49, 10, 101;
		--accent-gradient: linear-gradient(
			45deg,
			rgb(var(--accent)),
			rgb(var(--accent-light)) 30%,
			white 60%
		);
	}
	html {
		font-family: system-ui, sans-serif;
	}
	code {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			Liberation Mono,
			DejaVu Sans Mono,
			Bitstream Vera Sans Mono,
			Courier New,
			monospace;
	}
	.reading {
		position: fixed;
		top: 0;
		left: 0;
		transform-origin: left;
		z-index: 1000;
		/* Es experimental para versiones m√°s adelantadas de chrome */
		/* animation: grow-progress 2s linear forwards;
		animation-timeline: scroll(); */
	}
</style>
